/*
 * This file is generated by jOOQ.
 */
package com.github.monosoul.jooq.tables.records;


import com.github.monosoul.jooq.tables.PartitionedTable;

import java.time.OffsetDateTime;
import java.util.UUID;

import javax.validation.constraints.NotNull;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartitionedTableRecord extends UpdatableRecordImpl<PartitionedTableRecord> {

    private static final long serialVersionUID = -944468697;

    /**
     * Setter for <code>public.partitioned_table.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.partitioned_table.id</code>.
     */
    @NotNull
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.partitioned_table.timestamp</code>.
     */
    public void setTimestamp(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.partitioned_table.timestamp</code>.
     */
    @NotNull
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.partitioned_table.some_data</code>.
     */
    public void setSomeData(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.partitioned_table.some_data</code>.
     */
    public String getSomeData() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PartitionedTableRecord
     */
    public PartitionedTableRecord() {
        super(PartitionedTable.PARTITIONED_TABLE);
    }

    /**
     * Create a detached, initialised PartitionedTableRecord
     */
    public PartitionedTableRecord(UUID id, OffsetDateTime timestamp, String someData) {
        super(PartitionedTable.PARTITIONED_TABLE);

        set(0, id);
        set(1, timestamp);
        set(2, someData);
    }
}
